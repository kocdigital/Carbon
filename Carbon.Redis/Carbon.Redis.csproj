<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
	 <TargetFrameworks>net8.0;net6.0</TargetFrameworks>
	 <LangVersion>latest</LangVersion>
	 <Version>3.0.0</Version>
     <Description>
		 3.0.0
		 Dotnet 8.0 target framework added, older versions removed.
		 BinaryFormatter serialization removed, Json is used as master serializer/deserializer.
		 
		 2.9.0
		 Fix: Redis Sentinel support added correctly.
		 Feat: Degraded health status added for sentinel mode only.
		 
		 2.8.1
		 Multi get async support.

		 2.8.0
		 Keys can be fetched in both binary and json formatter serialized, but can only be set in json formatter serialized to transform binary formatter serialized keys which is unsupported.

		 2.7.1
		 Added try-catch expression to prevent data loss when converting binary formatter to json formatter.

		 2.7.0
		 Main release

		 2.6.2-preview
		 Deleted try catch expression(unnecessary and don't preserve stack trace).
		 Replaced Obsolete method with suggested method.

		 2.6.0-preview
		 Enabling pub/sub is now optional, defaults to false
		 HashRemove and HashCounter supports added

		 2.5.0-preview
		 Multiple Sentinel and Redis Cluster support
		 More accurate healthcheck for any kind of server installation (Cluster, Sentinel, Basic)
		 StackExchange.Redis upgrade

		 2.4.0-preview
		 More extension methods added (Get a key from redis, if null set it via method and return)

		 2.3.0-preview
		 Numerous type of handy extension methods are added such as Hash, HashAsObject, Set
		 Use HashAsObject to store a complete object into hash fields for boosted performance (Only supports Json serialization), and able to get selected fields rather than the entire object
		 Use Set for relationships or etc.

		 2.1.3-preview
		 Carbon.Redis JSON binary serializer added on the top of binary formatter serializer which is unsupported as of dotnet 5. Simply use static method ICarbonCacheExtensions.SetSerializationType as desired serialization type which defaults to binaryformatter.

		 If you try to get binaryformatter serialized keys via json binary serializer from redis, you will receive default value (such as null). At that moment, remove the existing key, and add the new one with the new serializer, or use set to replace it.

		 System.Text.Json (faster) is used as master serializer/deserializer replacing Newtonsoft.Json. This may require to add [Serializable] tag over your objects, make sure you consider it!

		 2.0.0-preview
		 Enables you to use CarbonRedisCache Helper in your services to access more extended methods and capabilities (i.e. RedLock, Redis PubSub etc.) and make the legacy apis compatible with this package
		 Handle with care while using this Helper extension methods as it contains binaryformatters which are obsoleted as of dotnet 5, either allow this feature in your csproj or do not use dotnet 5 and greater
		 BinaryFormatters will migrate to JsonSerializers or other serializations at incoming versions
		 1.3.3
		 Added SSL/TLS connection support
		 1.2.0
		 Added health check.
		 1.0.9
		 - Redis Key Length Retrieval from Configuration, not from Redis as a Key
		 1.0.4
		 - Scan Keys And Remove By Pattern</Description>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </PropertyGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net8.0'">
    <PackageReference Include="FastMember" Version="1.5.0" />
    <PackageReference Include="Microsoft.AspNetCore.Http.Abstractions" Version="2.2.0" />
    <PackageReference Include="Microsoft.Extensions.Caching.Abstractions" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Caching.StackExchangeRedis" Version="8.0.11" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Binder" Version="8.0.2" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.1" />
    <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks" Version="8.0.11" />
    <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions" Version="8.0.11" />
    <PackageReference Include="RedLock.net" Version="2.3.2" />
    <PackageReference Include="StackExchange.Redis" Version="2.7.27" />
    <PackageReference Include="System.Text.Json" Version="8.0.5" />
  </ItemGroup>
<ItemGroup Condition="'$(TargetFramework)' == 'net6.0'">
    <PackageReference Include="FastMember" Version="1.5.0" />
    <PackageReference Include="Microsoft.AspNetCore.Http.Abstractions" Version="2.2.0" />
    <PackageReference Include="Microsoft.Extensions.Caching.Abstractions" Version="6.0.0" />
    <PackageReference Include="Microsoft.Extensions.Caching.StackExchangeRedis" Version="6.0.10" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Binder" Version="2.1.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="6.0.1" />
    <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks" Version="6.0.11" />
    <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions" Version="6.0.11" />
    <PackageReference Include="RedLock.net" Version="2.3.2" />
    <PackageReference Include="StackExchange.Redis" Version="2.7.17" />
    <PackageReference Include="System.Text.Json" Version="6.0.11" />
  </ItemGroup>
<ItemGroup>
  <PackageReference Include="protobuf-net" Version="3.2.45" />
</ItemGroup>
</Project>
